* {
    /* 初始化 取消页面内外边距 */
    margin: 0;
    padding: 0;
    /* 这个是告诉浏览器：你想要设置的边框喝内边距的值是包含在总宽高内的 */
    box-sizing: border-box;
}

body {
    /* 100%窗口高度 */
    height: 100vh;
    /* 弹性布局 水平、垂直居中 */
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background: linear-gradient(200deg, #fbed77, #d8b376);
}

.loading {
    display: flex;
    /* 水平显示 */
    flex-direction: row;
}

.loading div {
    position: relative;
    width: 40px;
    height: 200px;
    /* 渐变背景 */
    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.05), #eef1f5);
    margin: 20px;
    border-radius: 20px;
    border: 2px solid #eef1f5;
    /* 阴影 */
    box-shadow: 15px 15px 20px rgba(0, 0, 0, 0.1),
    -15px -15px 20px rgba(251,237,119, 0.5),
    inset -5px -5px 5px rgba(255, 255, 255, 0.5),
    inset 5px 5px 5px rgba(0, 0, 0, 0.05);
    /* 溢出隐藏 */
    overflow: hidden;
}

.loading div::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 36px;
    height: 36px;
    border-radius: 50%;
    box-shadow: inset -5px -5px 5px rgba(0, 0, 0, 0.1),
    0 420px 0 400px lightskyblue;
    /* 执行动画：动画名称 时长 加速后减速 无限次播放 */
    animation: animate 2s ease-in-out infinite;
    /* 动画延迟 通过var函数获取自定义属性--x，再由calc函数计算得出每个元素的动画延迟时间 */
    animation-delay: calc(var(--x) * -0.3s);
    /* 初始化时先向上移动160px */
    transform: translateY(160px);
}

/* 定义动画 */
@keyframes animate {
    0% {
        transform: translateY(160px);
        /* hue-rotate是颜色滤镜，可以设置不同的度数来改变颜色 */
        filter: hue-rotate(0deg);
    }

    50% {
        transform: translateY(0px);
        filter: hue-rotate(180deg);
    }

    100% {
        transform: translateY(160px);
        filter: hue-rotate(360deg);
    }
}

.loading-text {
    margin-top: 20px;
    font-size: 24px;
    color: #8e9aaf;
    text-align: center;
}
ul li{
    position: absolute;
    border: 1px solid #fff;
    background-color: #fff;
    width: 30px;
    height: 30px;
    list-style: none;
    opacity: 0;
}

.square, .circle {
    position: absolute;
    z-index: -1;
}
.square li{
    top: 40vh;
    left: 60vw;
    /* 执行动画：动画名 时长 线性的 无限次播放 */
    animation: square 10s linear infinite;
}
.square li:nth-child(2){
    top: 80vh;
    left: 10vw;
    /* 设置动画延迟时间 */
    animation-delay: 2s;
}
.square li:nth-child(3){
    top: 80vh;
    left: 85vw;
    /* 设置动画延迟时间 */
    animation-delay: 4s;
}
.square li:nth-child(4){
    top: 10vh;
    left: 70vw;
    /* 设置动画延迟时间 */
    animation-delay: 6s;
}
.square li:nth-child(5){
    top: 10vh;
    left: 10vw;
    /* 设置动画延迟时间 */
    animation-delay: 8s;
}
.circle li{
    bottom: 0;
    left: 15vw;
    /* 执行动画 */
    animation: circle 10s linear infinite;
}
.circle li:nth-child(2){
    left: 35vw;
    /* 设置动画延迟时间 */
    animation-delay: 2s;
}
.circle li:nth-child(3){
    left: 55vw;
    /* 设置动画延迟时间 */
    animation-delay: 6s;
}
.circle li:nth-child(4){
    left: 75vw;
    /* 设置动画延迟时间 */
    animation-delay: 4s;
}
.circle li:nth-child(5){
    left: 90vw;
    /* 设置动画延迟时间 */
    animation-delay: 8s;
}

/* 定义动画 */
@keyframes square {
    0%{
        transform: scale(0) rotateY(0deg);
        opacity: 1;
    }
    100%{
        transform: scale(5) rotateY(1000deg);
        opacity: 0;
    }
}
@keyframes circle {
    0%{
        transform: scale(0) rotateY(0deg);
        opacity: 1;
        bottom: 0;
        border-radius: 0;
    }
    100%{
        transform: scale(5) rotateY(1000deg);
        opacity: 0;
        bottom: 90vh;
        border-radius: 50%;
    }
}